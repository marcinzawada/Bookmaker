// <auto-generated />
using System;
using Bookmaker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookmaker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201013145837_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookmaker.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCoverageStandings")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEvents")
                        .HasColumnType("bit");

                    b.Property<bool>("HasLineups")
                        .HasColumnType("bit");

                    b.Property<bool>("HasOdds")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPlayers")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPlayersStatistics")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPredictions")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStandings")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStatistics")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTopScorers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SeasonEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SeasonStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });
#pragma warning restore 612, 618
        }
    }
}
